<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yinqiao.af.mapper.QuestionBankMapper">
  <resultMap id="BaseResultMap" type="com.yinqiao.af.model.QuestionBank">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Jan 05 11:21:28 CST 2018.
    -->
    <id column="QUESTION_ID" jdbcType="VARCHAR" property="questionId" />
    <result column="EXAM_ID" jdbcType="VARCHAR" property="examId" />
    <result column="TYPE" jdbcType="VARCHAR" property="type" />
    <result column="USER_TYPE" jdbcType="VARCHAR" property="userType"/>
    <result column="CONTENT" jdbcType="VARCHAR" property="content" />
    <result column="PICFLAG" jdbcType="VARCHAR" property="picflag" />
    <result column="ANSWER" jdbcType="VARCHAR" property="answer" />
    <result column="STANDARD" jdbcType="VARCHAR" property="standard" />
    <result column="SCORE" jdbcType="VARCHAR" property="score" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Jan 05 11:21:28 CST 2018.
    -->
    delete from AF_QUESTION_BANK
    where QUESTION_ID = #{questionId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.yinqiao.af.model.QuestionBank">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Jan 05 11:21:28 CST 2018.
    -->
    insert into AF_QUESTION_BANK (QUESTION_ID, EXAM_ID, TYPE, USER_TYPE,
      CONTENT, PICFLAG, ANSWER, 
      STANDARD, SCORE)
    values (#{questionId,jdbcType=VARCHAR}, #{examId,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, #{userType,jdbcType=VARCHAR},
      #{content,jdbcType=VARCHAR}, #{picflag,jdbcType=VARCHAR}, #{answer,jdbcType=VARCHAR}, 
      #{standard,jdbcType=VARCHAR}, #{score,jdbcType=VARCHAR})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.yinqiao.af.model.QuestionBank">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Jan 05 11:21:28 CST 2018.
    -->
    update AF_QUESTION_BANK
    set EXAM_ID = #{examId,jdbcType=VARCHAR},
      TYPE = #{type,jdbcType=VARCHAR},
      USER_TYPE = #{userType,jdbcType=VARCHAR},
      CONTENT = #{content,jdbcType=VARCHAR},
      PICFLAG = #{picflag,jdbcType=VARCHAR},
      ANSWER = #{answer,jdbcType=VARCHAR},
      STANDARD = #{standard,jdbcType=VARCHAR},
      SCORE = #{score,jdbcType=VARCHAR}
    where QUESTION_ID = #{questionId,jdbcType=VARCHAR}
  </update>
  <!-- 查询单题 -->
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Jan 05 11:21:28 CST 2018.
    -->
    select QUESTION_ID, EXAM_ID, TYPE, USER_TYPE, CONTENT, PICFLAG, ANSWER, STANDARD, SCORE
    from AF_QUESTION_BANK
    where QUESTION_ID = #{questionId,jdbcType=VARCHAR}
  </select>
  
  <!-- 查询一套题 -->
  <select id="selectOneExamByExamID">
  	select QUESTION_ID, EXAM_ID, TYPE, USER_TYPE, CONTENT, PICFLAG, ANSWER, STANDARD, SCORE
    from AF_QUESTION_BANK
    where EXAM_ID = #{examId,jdbcType=VARCHAR}
  </select>
  
  <select id="selectAll" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Jan 05 11:21:28 CST 2018.
    -->
    select QUESTION_ID, EXAM_ID, TYPE,USER_TYPE, CONTENT, PICFLAG, ANSWER, STANDARD, SCORE
    from AF_QUESTION_BANK
  </select>
  
  <select id="isExist" resultType="java.lang.String" parameterType="java.lang.String">
  	select count(*)
	    from AF_QUESTION_BANK
	    where QUESTION_ID = #{questionId,jdbcType=VARCHAR}
  </select>
  
  <select id="getExamCount" resultType="java.lang.String" parameterType="java.lang.String">
  	select count(*)
    from AF_QUESTION_BANK
    where EXAM_ID = #{examId,jdbcType=VARCHAR}
  </select>
  
  <select id="getQuestionCount" resultType="java.util.Map" parameterType="java.lang.String">
  	select t.type, count(t.question_id) as questioncnt from AF_QUESTION_BANK t where t.exam_id = #{examId,jdbcType=VARCHAR} group by t.type order by t.type
  </select>
  
  <select id="getScore" resultType="java.lang.String" parameterType="java.util.List">
  	select sum(t.score) from AF_QUESTION_BANK t where t.question_id in
  	<foreach item="item" index="id" collection="list" open="("
		separator="," close=")">
		#{item}
	</foreach>
  </select>
  
  <select id="queryTypeQuestionCount" resultType="java.util.Map">
  	select t.type , count(t.question_id) as typecnt from AF_QUESTION_BANK t where EXAM_ID in (select t.exam_id from AF_EXAM_LIST t where t.intensifyflag = '0' and t.showflag = '1') group by t.type
  </select>
  
  <sql id="typeTable">
  	(select 'type0'||#{type,jdbcType=VARCHAR} as exam_id, 'type0'||#{type,jdbcType=VARCHAR}||lpad(rownum,3,'0') as question_id ,t.type ,t.content ,t.picflag,t.answer,t.standard,t.score from V_QUESTION_BANK t where t.type = #{type,jdbcType=VARCHAR})
  </sql>
  
  <select id="getOneTypeQuestionCount" resultType="String" parameterType="String">
  	select count(*) as questioncnt from AF_QUESTION_BANK
  </select>
  
  <select id="isTypeExist" resultType="java.lang.String" parameterType="java.util.HashMap">
  	select count(*)
	    from <include refid="typeTable"/>
	    where QUESTION_ID = #{questionId,jdbcType=VARCHAR}
  </select>
  
  <select id="getTypeExamCount" resultType="java.lang.String" parameterType="java.util.HashMap">
  	select count(*)
    from <include refid="typeTable"/>
    where EXAM_ID = #{examId,jdbcType=VARCHAR}
  </select>
  
  <select id="getTypeScore" resultType="java.lang.String" parameterType="java.util.List">
  	select sum(t.score) from AF_QUESTION_BANK t where t.question_id in
  	<foreach item="item" index="id" collection="list" open="("
		separator="," close=")">
		#{item}
	</foreach>
  </select>
  
  <select id="selectQuestions" resultMap="BaseResultMap">
  	select QUESTION_ID, EXAM_ID, TYPE, USER_TYPE, CONTENT, PICFLAG, ANSWER, STANDARD, SCORE from (
	  	select rownum as rown,QUESTION_ID, EXAM_ID, TYPE,USER_TYPE, CONTENT, PICFLAG, ANSWER, STANDARD, SCORE 
	  	from AF_QUESTION_BANK
	  	<where>
	  		<trim prefixOverrides="and">
		  		<if test="examId!=null and examId!=''">
		  			AND EXAM_ID = #{examId,jdbcType=VARCHAR}
		  		</if>
		  		<if test="examType!=null and examType!=''">
		  			AND TYPE = #{examType,jdbcType=VARCHAR}
		  		</if>
	  		</trim>
	  	</where> 
  	)
  	where 
  			rown <![CDATA[>=]]> #{start,jdbcType=INTEGER} 
  		AND rown <![CDATA[<=]]> #{end,jdbcType=INTEGER} 
  	order by exam_id,question_Id
  </select>
  
  <select id="selectQuestionsCnt" resultType="java.lang.Integer">
  		select count(*)
	  	from AF_QUESTION_BANK
	  	<where>
	  		<trim prefixOverrides="and">
		  		<if test="examId!=null and examId!=''">
		  			AND EXAM_ID = #{examId,jdbcType=VARCHAR}
		  		</if>
		  		<if test="examType!=null and examType!=''">
		  			AND TYPE = #{examType,jdbcType=VARCHAR}
		  		</if>
	  		</trim>
	  	</where> 
  </select>

  <select id="selectByPractice" resultMap="BaseResultMap">
  	select t1.QUESTION_ID, t1.EXAM_ID, t1.TYPE, t1.USER_TYPE, t1.CONTENT, t1.PICFLAG, t1.ANSWER, t1.STANDARD, t1.SCORE
  	from AF_QUESTION_BANK t1,AF_PRACTICE_QUES t2
  	where
  			t1.QUESTION_ID = t2.QUESTION
  		and t2.PRACTICE = #{practice,jdbcType=VARCHAR}
  </select>
</mapper>